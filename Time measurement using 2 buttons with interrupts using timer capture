#include <msp430g2553.h>

volatile float zaman_1=0;
volatile float zaman_2=0;
volatile float difference=0;

void main(void)
{
    WDTCTL = WDTPW + WDTHOLD;//WATCHDOG SETUP
    BCSCTL1= CALBC1_8MHZ;//8 MHZ CLOCK SETUP
    DCOCTL= CALDCO_8MHZ;//8 MHZ CLOCK SETUP

    TA1CTL= TASSEL_2+ID_0+MC_2;
    TA1CCTL1= CM_2+CCIS_0+SCS+CAP+CCIE;//P2.1 CAPTURE INPUT NEG EDGE DETECT
    TA1CCTL2= CM_2+CCIS_0+SCS+CAP+CCIE;//P2.4 CAPTURE INPUT NEG EDGE DETECT

    P1DIR |=BIT0 + BIT4;//BUZZER VE LED OUTPUT(SUBJECT TO CHANGE!)

    P2OUT =0;
    P2OUT =BIT1;//PULL-UP RES ENABLED
    P2REN |=BIT1;//TIMER0_A CCI0A INPUT

    P2IE |=BIT1;
    P2IES|=BIT1;
    P2IFG&= ~BIT1;

    P2OUT =0;
    P2OUT =BIT4;//PULL-UP RES ENABLED
    P2REN |=BIT4;//TIMER0_A CCI1A INPUT

    P2IE |=BIT4;
    P2IES|=BIT4;
    P2IFG&= ~BIT4;
    //PINLER HIGH STATEDELER IDLE DA SEN SWITCHLE LOW STATE GECICEKSIN NEG EDGE YARATICAKSIN
    while(1)
    {
        _BIS_SR(CPUOFF+ GIE);//LOW POWER MOD VE GLOBAL INTERRUPT SETUP
        difference=zaman_1-zaman_2;//BURASI FREKANS OLCUYOR OLABILIR DEGISEBILIR ALGORITMA
        difference=abs(difference);
        //DISPLAY E BURDA YAZDIRACAKSIN
    }

}

#pragma vector=TIMER1_A1_VECTOR //BUTTON CAPTURE INTERRUPTS
__interrupt void TIME_CALCULATION(void)
{
switch( TA1IV ){
case 2: // CCR1 INTERRUPT
zaman_1 = TA1CCR1; // CAPTURE P2.1
__bic_SR_register_on_exit(CPUOFF); // WAKE UP CPU
break;
case 4:
zaman_2 = TA1CCR2; // CAPTURE P2.4
__bic_SR_register_on_exit(CPUOFF); // WAKE UP CPU
break;// CCR2 INTERRUPT
case 10: break; // TIMER A OVERFLOW INTERRUPT

}
